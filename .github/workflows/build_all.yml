name: Build Binaries

on:
    push:
      tags:
        - "*"

env:
    # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
    BUILD_TYPE: Release
    GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
    build_debian_bookworm:
        runs-on: ubuntu-latest

        steps:
        - uses: actions/checkout@v4
        
        - name: Create Docker Image
          run: cd $GITHUB_WORKSPACE/docker_builds/debian_bookworm && docker build . --tag sdrpp_build

        - name: Run Container
          run: docker run --name build -v $GITHUB_WORKSPACE:/root/SDRPlusPlus --env BUILD_NO="-$GITHUB_RUN_NUMBER" sdrpp_build /root/do_build.sh

        - name: Recover Deb Archive
          working-directory: ${{runner.workspace}}
          run: docker cp build:/root/SDRPlusPlus/sdrpp_debian_amd64.deb ./

        - name: Save Deb Archive
          uses: actions/upload-artifact@v4
          with:
              name: sdrpp_debian_bookworm_amd64
              path: ${{runner.workspace}}/sdrpp_debian_amd64.deb

    build_debian_sid:
        runs-on: ubuntu-latest

        steps:
        - uses: actions/checkout@v4
        
        - name: Create Docker Image
          run: cd $GITHUB_WORKSPACE/docker_builds/debian_sid && docker build . --tag sdrpp_build

        - name: Run Container
          run: docker run --name build -v $GITHUB_WORKSPACE:/root/SDRPlusPlus --env BUILD_NO="-$GITHUB_RUN_NUMBER" sdrpp_build /root/do_build.sh

        - name: Recover Deb Archive
          working-directory: ${{runner.workspace}}
          run: docker cp build:/root/SDRPlusPlus/sdrpp_debian_amd64.deb ./
        - name: Save Deb Archive
          uses: actions/upload-artifact@v4
          with:
              name: sdrpp_debian_sid_amd64
              path: ${{runner.workspace}}/sdrpp_debian_amd64.deb

    build_ubuntu_jammy:
        runs-on: ubuntu-latest

        steps:
        - uses: actions/checkout@v4
        
        - name: Create Docker Image
          run: cd $GITHUB_WORKSPACE/docker_builds/ubuntu_jammy && docker build . --tag sdrpp_build

        - name: Run Container
          run: docker run --name build -v $GITHUB_WORKSPACE:/root/SDRPlusPlus --env BUILD_NO="-$GITHUB_RUN_NUMBER" sdrpp_build /root/do_build.sh

        - name: Recover Deb Archive
          working-directory: ${{runner.workspace}}
          run: docker cp build:/root/SDRPlusPlus/sdrpp_debian_amd64.deb ./

        - name: Save Deb Archive
          uses: actions/upload-artifact@v4
          with:
              name: sdrpp_ubuntu_jammy_amd64
              path: ${{runner.workspace}}/sdrpp_debian_amd64.deb
    
    build_ubuntu_noble:
        runs-on: ubuntu-latest

        steps:
        - uses: actions/checkout@v4
        
        - name: Create Docker Image
          run: cd $GITHUB_WORKSPACE/docker_builds/ubuntu_noble && docker build . --tag sdrpp_build

        - name: Run Container
          run: docker run --name build -v $GITHUB_WORKSPACE:/root/SDRPlusPlus --env BUILD_NO="-$GITHUB_RUN_NUMBER" sdrpp_build /root/do_build.sh

        - name: Recover Deb Archive
          working-directory: ${{runner.workspace}}
          run: docker cp build:/root/SDRPlusPlus/sdrpp_debian_amd64.deb ./

        - name: Save Deb Archive
          uses: actions/upload-artifact@v4
          with:
              name: sdrpp_ubuntu_noble_amd64
              path: ${{runner.workspace}}/sdrpp_debian_amd64.deb

    build_ubuntu_oracular:
        runs-on: ubuntu-latest

        steps:
        - uses: actions/checkout@v4
        
        - name: Create Docker Image
          run: cd $GITHUB_WORKSPACE/docker_builds/ubuntu_oracular && docker build . --tag sdrpp_build

        - name: Run Container
          run: docker run --name build -v $GITHUB_WORKSPACE:/root/SDRPlusPlus --env BUILD_NO="-$GITHUB_RUN_NUMBER" sdrpp_build /root/do_build.sh

        - name: Recover Deb Archive
          working-directory: ${{runner.workspace}}
          run: docker cp build:/root/SDRPlusPlus/sdrpp_debian_amd64.deb ./

        - name: Save Deb Archive
          uses: actions/upload-artifact@v4
          with:
              name: sdrpp_ubuntu_oracular_amd64
              path: ${{runner.workspace}}/sdrpp_debian_amd64.deb

    create_release:
        name: Create Release
        runs-on: ubuntu-latest
        needs: ['build_debian_bookworm', 'build_debian_sid', 'build_ubuntu_jammy', 'build_ubuntu_noble', 'build_ubuntu_oracular']
        steps:
          - name: Download All Builds
            uses: actions/download-artifact@v4

          - name: Create Archive
            run: >
              mkdir sdrpp_all && 
              mv sdrpp_debian_bookworm_amd64/sdrpp_debian_amd64.deb sdrpp_all/sdrpp_debian_bookworm_amd64.deb && 
              mv sdrpp_debian_sid_amd64/sdrpp_debian_amd64.deb sdrpp_all/sdrpp_debian_sid_amd64.deb && 
              mv sdrpp_ubuntu_jammy_amd64/sdrpp_debian_amd64.deb sdrpp_all/sdrpp_ubuntu_jammy_amd64.deb &&
              mv sdrpp_ubuntu_noble_amd64/sdrpp_debian_amd64.deb sdrpp_all/sdrpp_ubuntu_noble_amd64.deb &&
              mv sdrpp_ubuntu_oracular_amd64/sdrpp_debian_amd64.deb sdrpp_all/sdrpp_ubuntu_oracular_amd64.deb
          
          - uses: actions/upload-artifact@v4
            with:
              name: sdrpp_all
              path: sdrpp_all/

          - name: Create Release
            id: create_release
            uses: actions/create-release@v1
            env:
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            with:
              tag_name: ${{ github.ref }}
              release_name: Release ${{ github.ref }}
              draft: false
              prerelease: false
          - name: Upload Debian Bookworm asset
            id: upload-release-assets-bookworm
            uses: actions/upload-release-asset@v1
            env:
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            with:
              upload_url: ${{ steps.create_release.outputs.upload_url }}
              asset_path: sdrpp_all/sdrpp_debian_bookworm_amd64.deb
              asset_name: sdrpp_debian_bookworm_amd64.deb
              asset_content_type: application/dpkg
          - name: Upload Debian Sid asset
            id: upload-release-assets-sid
            uses: actions/upload-release-asset@v1
            env:
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            with:
              upload_url: ${{ steps.create_release.outputs.upload_url }}
              asset_path: sdrpp_all/sdrpp_debian_sid_amd64.deb
              asset_name: sdrpp_debian_sid_amd64.deb
              asset_content_type: application/dpkg
          - name: Upload Ubuntu Jammy asset
            id: upload-release-assets-jammy
            uses: actions/upload-release-asset@v1
            env:
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            with:
              upload_url: ${{ steps.create_release.outputs.upload_url }}
              asset_path: sdrpp_all/sdrpp_ubuntu_jammy_amd64.deb
              asset_name: sdrpp_ubuntu_jammy_amd64.deb
              asset_content_type: application/dpkg
          - name: Upload Ubuntu Noble asset
            id: upload-release-assets-noble
            uses: actions/upload-release-asset@v1
            env:
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            with:
              upload_url: ${{ steps.create_release.outputs.upload_url }}
              asset_path: sdrpp_all/sdrpp_ubuntu_noble_amd64.deb
              asset_name: sdrpp_ubuntu_noble_amd64.deb
              asset_content_type: application/dpkg
          - name: Upload Ubuntu Oracular asset
            id: upload-release-assets-oracular
            uses: actions/upload-release-asset@v1
            env:
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            with:
              upload_url: ${{ steps.create_release.outputs.upload_url }}
              asset_path: sdrpp_all/sdrpp_ubuntu_oracular_amd64.deb
              asset_name: sdrpp_ubuntu_oracular_amd64.deb
              asset_content_type: application/dpkg

    check_spelling:
        runs-on: ubuntu-latest

        steps:
        - uses: actions/checkout@v4

        - name: Install codespell
          run: sudo apt update -y && sudo apt install -y codespell
        
        - name: Running codespell
          run: cd $GITHUB_WORKSPACE && codespell -q 2 || true

    check_formatting:
        runs-on: ubuntu-latest

        steps:
        - uses: actions/checkout@v4
        
        - name: Run check_clang_format
          run: cd $GITHUB_WORKSPACE && chmod +x ./check_clang_format.sh && ./check_clang_format.sh || true
